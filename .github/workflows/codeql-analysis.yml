name: "CodeQL Scan"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  codeql:
    name: Analyze (CodeQL)
    runs-on: ubuntu-latest

    steps:
      - name: 🧰 Checkout del código
        uses: actions/checkout@v5

      - name: ⚙️ Configurar .NET 8
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8.0.x'

      - name: 🧩 Verificar versión de .NET
        run: dotnet --info

      # Inicializa CodeQL en modo 'manual' (tú ejecutarás restore/build dentro del contexto)
      - name: 🧪 Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
          build-mode: manual
          queries: security-and-quality

      # Restaurar dependencias desde dentro del contexto CodeQL
      - name: 📦 Restaurar dependencias
        run: dotnet restore nsf-backend-util.sln

      # Compilar la solución completa para generar los binarios que CodeQL necesita
      - name: 🏗️ Compilar el proyecto
        run: dotnet build --configuration Release --no-restore

      # Ejecutar el análisis y subir resultados a GitHub (Code scanning alerts)
      - name: 🔍 Ejecutar análisis de CodeQL
        uses: github/codeql-action/analyze@v3

      # (Opcional) Guardar el/s SARIF generados como artifact para descargar y revisar localmente
      - name: 📦 Subir reporte SARIF (opcional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif
          path: results/*.sarif
