name: Backend CI (.NET 8)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write     # Requerido para OIDC
  contents: read

jobs:
  build:
    name: 🧪 CI - Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 🧰 Checkout del código
        uses: actions/checkout@v4

      - name: ⚙️ Configurar .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📦 Restaurar dependencias
        run: dotnet restore

      - name: 🏗️ Compilar el proyecto
        run: dotnet build --configuration Release --no-restore

      - name: 🧪 Ejecutar pruebas
        run: dotnet test ./Scharff.UnitTest/Scharff.UnitTest.csproj --verbosity normal

      - name: 📤 Publicar artefactos
        #run: dotnet publish -c Release -o ./publish
        run: dotnet publish ./Scharff.API.Utils/Scharff.API.Utils.csproj -c Release -o ./publish
        if: success()

      - name: 📦 Subir artefacto de build
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: ./publish
          retention-days: 5 # Mantener el artefacto por 5 días
      
  deploy:
    name: 🚀 CD - Deploy to Azure
    needs: build
    runs-on: ubuntu-latest

    steps:    

      # 1. Descargar artefacto generado por el pipeline de CI
      - name: 🧰 Descargar artefacto del pipeline de CI
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact # Nombre del artefacto generado en CI
          path: ./publish # Directorio donde se descargará el artefacto

      # 2. Validar que el artefacto existe y está correcto
      - name: ✅ Validar artefacto
        run: |
          if [ ! -d "./publish" ]; then
            echo "El artefacto no fue descargado correctamente. Verifica el pipeline de CI."
            exit 1
          fi
          echo "Artefacto validado correctamente. Azure gestionará el despliegue."

      - name: 📁 Mostrar estructura del artefacto
        run: tree ./publish || ls -R ./publish
        
      - name: 🔐 Login en Azure usando OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-oidc: true


      - name: 🚀 Desplegar en Azure App Service usando OIDC
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'nsf-backend-ga'
          package: ./publish
