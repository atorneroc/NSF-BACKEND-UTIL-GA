name: "Azure Deploy Container Template"

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      acr_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      image_tag:
        default: "latest"
        type: string
      slot:
        default: "production"
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      MS_TEAMS_WEBHOOK:
        required: false

permissions:
  id-token: write
  contents: read

# üîÑ Evita despliegues simult√°neos al mismo App Service
concurrency:
  group: deploy-${{ inputs.app_name }}-${{ inputs.slot }}
  cancel-in-progress: true

jobs:
  deploy-container:
    name: üöÄ Deploy Azure App Service (Container)
    runs-on: ubuntu-latest
    environment:
      name: production

    env:
      APP_NAME: ${{ inputs.app_name }}
      SLOT_NAME: ${{ inputs.slot }}
      ACR_NAME: ${{ inputs.acr_name }}
      IMAGE_NAME: ${{ inputs.image_name }}
      IMAGE_TAG: ${{ inputs.image_tag }}
      RESOURCE_GROUP: scharff-nsf-dev-rg

    outputs:
      deployment_status: ${{ steps.deploy-status.outputs.status }}

    steps:
      - name: üîê Login Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-oidc: true

      - name: üß© Verificar versi√≥n Azure CLI
        run: az version

      - name: üîç Validar existencia del App Service
        id: validate-app
        run: |
          echo "üîé Validando existencia del recurso $APP_NAME..."
          if ! az webapp show --name $APP_NAME --resource-group $RESOURCE_GROUP >/dev/null 2>&1; then
            echo "‚ùå No se encontr√≥ el App Service '$APP_NAME' en el grupo '$RESOURCE_GROUP'."
            exit 1
          fi

      - name: üîê Login a ACR
        run: az acr login --name $ACR_NAME

      - name: üîÅ Actualizar App Service para usar nueva imagen
        id: update-image
        run: |
          echo "üîÅ Actualizando imagen en $APP_NAME..."
          az webapp config container set \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --container-image-name "$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG" \
            --container-registry-url "https://$ACR_NAME.azurecr.io"

      - name: üîç Verificar configuraci√≥n aplicada
        run: |
          echo "üîç Verificando configuraci√≥n actual..."
          az webapp config show \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "linuxFxVersion" -o tsv

      - name: üîÑ Reiniciar App Service
        run: |
          echo "üîÑ Reiniciando aplicaci√≥n $APP_NAME..."
          az webapp restart --name $APP_NAME --resource-group $RESOURCE_GROUP

      - name: ‚úÖ Verificar estado del despliegue
        id: deploy-status
        run: |
          STATUS=$(az webapp show --name $APP_NAME --resource-group $RESOURCE_GROUP --query "state" -o tsv)
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "‚úÖ Estado actual: $STATUS"

      # ===============================================
      # üì® Notificaci√≥n a Microsoft Teams (curl seguro)
      # ===============================================
      - name: üì£ Notificar resultado en Microsoft Teams
        if: always()
        run: |
          if [ -z "${{ secrets.MS_TEAMS_WEBHOOK }}" ]; then
            echo "‚ö†Ô∏è MS_TEAMS_WEBHOOK no est√° configurado. Saltando notificaci√≥n."
            exit 0
          fi

          STATUS="${{ job.status }}"
          COLOR="#36a64f"; EMOJI="üü¢"
          if [ "$STATUS" != "success" ]; then COLOR="#FF0000"; EMOJI="üî¥"; fi

          MESSAGE="{
            \"@type\": \"MessageCard\",
            \"@context\": \"http://schema.org/extensions\",
            \"themeColor\": \"$COLOR\",
            \"summary\": \"Deploy $STATUS\",
            \"sections\": [{
              \"activityTitle\": \"$EMOJI **Azure Deploy - $STATUS**\",
              \"activitySubtitle\": \"**App:** ${{ inputs.app_name }}<br>**Branch:** ${{ github.ref_name }}<br>**Actor:** ${{ github.actor }}\",
              \"text\": \"Imagen desplegada: **${{ inputs.acr_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.image_tag }}**<br>[Ver ejecuci√≥n en GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"
            }]
          }"

          curl -H "Content-Type: application/json" \
               -d "$MESSAGE" \
               ${{ secrets.MS_TEAMS_WEBHOOK }}
