name: SonarCloud (.NET 8)

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: 🧰 Checkout del código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Configurar .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 💾 Cache de dependencias NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: 📦 Restaurar dependencias
        run: dotnet restore nsf-backend-util.sln

      - name: 🧩 Instalar SonarScanner si no existe
        run: |
          dotnet tool update --global dotnet-sonarscanner || dotnet tool install --global dotnet-sonarscanner
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: 🚀 Análisis SonarCloud Begin
        run: |
          dotnet sonarscanner begin \
            /k:"atorneroc_NSF-BACKEND-UTIL-GA" \
            /o:"atorneroc" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="${SONAR_TOKEN}" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.Test.cs,**/Migrations/**" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: 🏗️ Compilar proyecto
        run: dotnet build nsf-backend-util.sln --configuration Release --no-restore

      - name: 🧪 Ejecutar pruebas con cobertura
        run: |
          dotnet test ./Scharff.UnitTest/Scharff.UnitTest.csproj \
            --configuration Release \
            --no-build \
            --logger:"trx;LogFileName=test_results.trx" \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      - name: 🏁 Finalizar análisis SonarCloud
        run: dotnet sonarscanner end /d:sonar.login="${SONAR_TOKEN}"

      - name: 📊 Publicar resultados de pruebas
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults
